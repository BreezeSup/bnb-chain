name: Create 50 Custom Issues

on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  post_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Post 50 Customized Issues with Metadata
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = [
              { title: "⚡ Feature: Adaptive block size scaling", body: "Implement logic to scale block size dynamically based on average gas usage trends.", labels: ["feature", "performance"] },
              { title: "🔒 Bug: Wallet connect doesn't reject untrusted apps", body: "WalletConnect sessions are not properly rejecting dApps from unknown domains.", labels: ["bug", "security"] },
              { title: "📦 Feature: Upload contract ABIs to IPFS", body: "Support uploading verified contract ABIs and source to IPFS for decentralization.", labels: ["feature", "contracts"] },
              { title: "🧰 Feature: Add support for .bnb domains", body: "Support ENS-like .bnb domain name resolution on-chain.", labels: ["feature", "naming"] },
              { title: "🔎 Bug: 'eth_call' returns inconsistent results", body: "Results from `eth_call` vary across different nodes for the same block state.", labels: ["bug", "rpc"] },
              { title: "📊 Feature: Display validator slashing history", body: "Show slashing events and reasons on explorer for each validator.", labels: ["feature", "explorer"] },
              { title: "🛠️ Chore: Deprecate legacy bridge endpoints", body: "Clean up old bridge API endpoints in favor of unified v2 APIs.", labels: ["chore", "bridge"] },
              { title: "🧾 Feature: Add CSV export of token transfers", body: "Allow users to export their token transfer history as CSV from explorer.", labels: ["feature", "explorer"] },
              { title: "💡 Feature: DApp verification badge", body: "Add verified badges to smart contracts belonging to known DApps.", labels: ["feature", "explorer"] },
              { title: "🌉 Bug: Bridge stuck in pending status", body: "Certain cross-chain transfers freeze in 'pending' without feedback. Add timeout handling.", labels: ["bug", "bridge"] },

              { title: "🔐 Feature: Allow multiple guardian addresses for recovery", body: "Support multisig-style account recovery using multiple guardian addresses.", labels: ["feature", "wallet"] },
              { title: "📄 Docs: Update bridge fee mechanics", body: "Current documentation lacks clear breakdown of how fees are calculated on bridge transfers.", labels: ["documentation", "bridge"] },
              { title: "🛑 Bug: Chain reorg triggers stuck txs", body: "When a reorg happens, some transactions become orphaned but not re-broadcast.", labels: ["bug", "consensus"] },
              { title: "📉 Feature: Gas prediction API for next block", body: "Expose an endpoint to estimate likely gas for transactions in the upcoming block.", labels: ["feature", "gas"] },
              { title: "⚙️ Feature: Toggle to disable mempool on archive nodes", body: "Allow operators to disable mempool for nodes used only for historical reads.", labels: ["feature", "mempool"] },
              { title: "💬 Bug: Logs API misses events on fast blocks", body: "When blocks are created rapidly, some logs from emitted events are skipped in RPC logs call.", labels: ["bug", "rpc"] },
              { title: "🎯 Feature: Real-time slashing alert system", body: "Notify validator operators instantly when a slashing is triggered.", labels: ["feature", "notifications"] },
              { title: "🧪 Test: Simulate bridge attack scenarios", body: "Build test suite to simulate potential attacks on the cross-chain bridge.", labels: ["testing", "bridge"] },
              { title: "💬 Docs: Clarify token decimal behavior", body: "Update docs to explain how BNB Chain handles tokens with unusual decimal configs.", labels: ["documentation", "token"] },
              { title: "🔐 Bug: 'eth_sign' returns invalid signatures", body: "Signature returned by `eth_sign` occasionally fails to verify. Trace down root cause.", labels: ["bug", "rpc"] },

              { title: "📈 Feature: Chain growth rate visualization", body: "Show daily block count, tx count, and gas usage growth trends on explorer dashboard.", labels: ["feature", "analytics"] },
              { title: "🧩 Feature: Smart contract debugging tools", body: "Add integration with Hardhat or Tenderly for step-by-step contract debug on BNB Chain.", labels: ["feature", "developer"] },
              { title: "🔧 Feature: Custom RPC node region selector", body: "Let users choose preferred RPC node regions from wallet UIs.", labels: ["feature", "wallet"] },
              { title: "🚫 Bug: Gasless tx rejected without clear reason", body: "Relayed gasless txs rejected silently. Add proper error messages.", labels: ["bug", "relayer"] },
              { title: "🔄 Feature: Auto-resync for stale nodes", body: "Detect out-of-sync nodes and trigger fast catch-up using snapshot and peer stats.", labels: ["feature", "sync"] },
              { title: "🧰 Chore: Consolidate contract verification toolchain", body: "Unify contract verifier scripts to reduce duplication and errors.", labels: ["chore", "contracts"] },
              { title: "📄 Bug: Contract verification stuck on large files", body: "Large contracts with >10 files fail to verify due to timeout or bundle errors.", labels: ["bug", "contract"] },
              { title: "📉 Feature: Visualize validator commission rates", body: "Display commission % history per validator for stakers to evaluate.", labels: ["feature", "staking"] },
              { title: "💰 Feature: Gas subsidy for testnet onboarding", body: "Allow faucet to grant enough BNB for deploying one contract and 5 txs.", labels: ["feature", "testnet"] },
              { title: "🔒 Feature: Simulated execution for tx preview", body: "Allow wallets to simulate tx execution result before signing.", labels: ["feature", "wallet"] },

              { title: "📘 Docs: List supported BEP token standards", body: "Add a table of supported BEP-2, BEP-20, BEP-721 and 1155 features.", labels: ["documentation", "token"] },
              { title: "⚙️ Bug: Block gas limit resets unexpectedly", body: "Some validators propose blocks with a lower-than-expected gas limit.", labels: ["bug", "consensus"] },
              { title: "💬 Feature: Telegram bot alerts for bridge status", body: "Notify users of bridge outages, delays, and confirmations via a bot.", labels: ["feature", "notifications"] },
              { title: "🔍 Feature: zk-proof explorer integration", body: "Add proof verification links to zk-bridge txs for transparency.", labels: ["feature", "zk"] },
              { title: "📁 Feature: Contract versioning metadata", body: "Track deployment history and version tags for verified contracts.", labels: ["feature", "contracts"] },
              { title: "⚠️ Bug: Bridge fees displayed in wrong units", body: "Fees shown in Gwei instead of native token unit on some bridge UIs.", labels: ["bug", "bridge"] },
              { title: "🔧 Feature: Add mempool tx timestamp in RPC", body: "Add timestamp metadata to mempool txs for ordering analysis.", labels: ["feature", "mempool"] },
              { title: "🧠 Feature: Use AI models to detect spam tokens", body: "Integrate ML-based filter to flag airdropped spam tokens in wallets.", labels: ["feature", "security"] },
              { title: "📦 Chore: Update all dependencies in node build", body: "Upgrade outdated packages in the node client to latest versions.", labels: ["chore", "dependencies"] },
              { title: "📉 Bug: NFT floor price calculations off", body: "Explorer inaccurately calculates floor price when sales volume is low.", labels: ["bug", "nft"] }
            ];

            const milestoneTitle = "v1.0";
            const assignees = ["BreezeSup"];

            const { data: milestones } = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const milestone = milestones.find(m => m.title === milestoneTitle);
            if (!milestone) {
              throw new Error(`❌ Milestone '${milestoneTitle}' not found. Please create it on GitHub first.`);
            }

            for (const issue of issues) {
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issue.title,
                body: issue.body,
                labels: issue.labels || [],
                assignees,
                milestone: milestone.number
              });

              console.log(`✅ Created: ${response.data.title} — ${response.data.html_url}`);
            }
